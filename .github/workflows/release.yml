name: 🌎 Create release

on:
  push:
    tags:
      - '*'

permissions:
  id-token: write
  contents: read

jobs:
  compile:
    name: 📦 Compile binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        target: [wasm32-wasip1, x86_64-unknown-linux-gnu, x86_64-pc-windows-gnu]
        binary: [exportcase.wasm, exportcase, exportcase.exe]
        setup: [./scripts/setup-linux.sh]
        build: [./scripts/build-linux.sh]
        include:
          - os: ubuntu-latest
            target: wasm32-wasip1
            binary: exportcase.wasm
            setup: ./scripts/setup-linux.sh
            build: ./scripts/build-linux.sh
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            binary: exportcase.exe
            setup: ./scripts/setup-linux.sh
            build: ./scripts/build-linux.sh
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: exportcase
            setup: ./scripts/setup-linux.sh
            build: ./scripts/build-linux.sh
    steps:
      - name: 🛒 Get source code
        uses: actions/checkout@v4

      - name: 💻 Run setup script
        working-directory: ./binary
        run: ${{ matrix.setup }}

      - name: 🔨 Compile binary
        working-directory: ./binary
        run: ${{ matrix.build }}

      - name: 📂 Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}/binary/target/${{ matrix.target }}/release/${{ matrix.binary }}
          path: ./binary/target//${{ matrix.target }}/release/${{ matrix.binary }}

  package:
    name: 📦 Build npm package 
    runs-on: ubuntu-latest
    needs: compile
    steps:

      - name: 🛒 Get source code
        uses: actions/checkout@v4

      - name: 📥 Download wasm binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.ref_name }}/binary/target/wasm32-wasip1/release/exportcase.wasm

      - name: 📥 Download linux binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.ref_name }}/binary/target/x86_64-unknown-linux-gnu/release/exportcase

      - name: 📥 Download windows binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.ref_name }}/binary/target/x86_64-pc-windows-gnu/release/exportcase.exe

      - name: 📂 Move binary to package
        working-directory: ./package
        run: npm run get-binary
      
      - name: 🤝 Install cosign
        uses: sigstore/cosign-installer@v3.4.0

      - name: ✍🏻 Sign release
        working-directory: ./package
        run: |
          cosign sign-blob --yes --output-signature ./bin/exportcase.wasm.sig --output-certificate ./bin/exportcase.wasm.crt ./bin/exportcase.wasm
          cat bin/build-info.md | envsubst > bin/build-info.subst.md
          mv bin/build-info.subst.md bin/build-info.md

      - name: 🗂️ Create archive
        working-directory: ./package
        run: npm pack

      - name: 🚀 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}
          path: package/exportcase-${{ github.ref_name }}.tgz

  test:
    name: 🐑 Integration testing
    runs-on: ${{ matrix.os }}
    needs: package

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node: [16, 'latest']

    steps:
        - name: 🛒 Get source code
          uses: actions/checkout@v4

        - name: 🧹 Remove existing package directory (Linux/MacOS)
          if: runner.os == 'Linux' || runner.os == 'macOS'
          run: rm -rf ./package

        - name: 🧹 Remove existing package directory (Windows)
          if: runner.os == 'Windows'
          run: Remove-Item -Recurse -Force .\package

        - name: 📥 Download artifact
          uses: actions/download-artifact@v4
          with:
            name: ${{ github.ref_name }}

        - name: 📦 Extract npm package
          run: tar -xzf exportcase-${{ github.ref_name }}.tgz

        - name: 🔬 Run example testing
          working-directory: ./example
          run: |
            npm install
            npm run build
            npm run test

  release:
    name: 🌎 Create release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 📥 Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.ref_name }}

      - name: 📢 Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Exportcase ${{ github.ref_name }}
          draft: true
          prerelease: true

      - name: 📤 Upload Release package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: package/exportcase-${{ github.ref_name }}.tgz
          asset_name: exportcase-${{ github.ref_name }}.tgz
          asset_content_type: application/gzip
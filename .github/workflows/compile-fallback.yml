on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      target:
        required: true
        type: string
      binary:
        required: true
        type: string
      setup:
        required: true
        type: string
      build:
        required: true
        type: string

jobs:
  compile:
    name: Compile
    runs-on: ${{ inputs.os }}
    steps:
      - name: ğŸ›’ Get source code
        uses: actions/checkout@v4

      - name: ğŸ“¥ Download wasm binary
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.ref_name }}.exportcase.wasm
          path: ./binary/target/wasm32-wasip1/release

      - name: ğŸ“‚ Move binary to package
        working-directory: ./package
        run: npm run get-binaries

      - name: ğŸ”¬ Run spec testing
        id: testing
        working-directory: ./spec
        run: |
          npm install
          npm run build
          npm run test
        continue-on-error: true

      - name: ğŸ’» Run setup script
        working-directory: ./binary
        if: steps.testing.outcome == 'failure'
        run: ${{ inputs.setup }}

      - name: ğŸ”¨ Compile binary
        working-directory: ./binary
        if: steps.testing.outcome == 'failure'
        run: ${{ inputs.build }}

      - name: Rename binary for macOS
        if: ${{ steps.testing.outcome == 'failure' && runner.os == 'macOS' }}
        run: mv ./binary/target/${{ inputs.target }}/${{ inputs.binary }} ./binary/target/${{ inputs.target }}/darwin-${{ inputs.binary }}

      - name: ğŸ“‚ Upload binary
        uses: actions/upload-artifact@v4
        if: steps.testing.outcome == 'failure'
        with:
          name: ${{ github.ref_name }}.${{ inputs.os }}.${{ inputs.binary }}
          path: ./binary/target/${{ inputs.target }}/${{ runner.os == 'macOS' && 'darwin-' || '' }}${{ inputs.binary }}
